<?xml version="1.0"?>
<launch>

    <!-- roslaunch arguments -->
    <arg name="debug" default="false"/>
    <arg name="gui" default="true"/>

    <!-- summit_xl_control launch file -->
    <include file="$(find robot_gazebo)/launch/summit_xl_control.launch" />

    <!-- launch robot control -->
    <include file="$(find robot_gazebo)/launch/summit_xl_robot_control.launch" />

    <!-- launch pad -->
    <!--<include file="$(find summit_xl_pad)/launch/summit_xl_pad.launch" />-->

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_gazebo)/worlds/workplace.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="headless" value="false"/>
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find robot_gazebo)/robots/summit_xl_hl_ext.urdf.xacro'" />

    <arg name="x" default="-2.0" />
    <arg name="y" default="-1.0" />
    <arg name="z" default="0.30" />
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="0.0" />


    <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)  -model summit_xl -param robot_description"/>


    <!-- <include file="$(find sumit_xl_tools)/launch/start_person.launch" /> -->

</launch>
