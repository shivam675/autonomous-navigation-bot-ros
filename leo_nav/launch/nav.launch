<launch>

    <!--including the launch file with a leo_nav world-->
    <!--include file="$(find ebot_description)/launch/task2.launch" /-->
    <!-- including launch file for localization using AMCL -->

    <!-- <arg name="base_global_planner" default="navfn/NavfnROS"/> -->
    <!-- <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/> -->

    <include file="$(find leo_nav)/launch/amcl_leo.launch" />
     <!-- including launch file for visualizing in rviz -->

<!--including urdf model-->
    <!-- <param name="robot_description" command="$(find xacro)/xacro.py '$(find ebot_description)/urdf/ebot_ur5.xacro'"/> -->
<!--publish the state of the robot i.e. tf-->
    <node name="robot_state_publisher_movebase" pkg="robot_state_publisher" type="robot_state_publisher"/>



     <!-- <node pkg="tf" type="static_transform_publisher" name="map_to_base_footprint" args="0 0 0 0 0 0 base_footprint map 100" /> -->
<!-- runnning rviz node-->
    <!-- <node name="rviz" pkg="rviz" type="rviz" /> -->

<!--saving rviz configurations in a rviz folder-->

    <!-- <node name="rviz" pkg="rviz" type="rviz"   args=" -d $(find leo_nav)/launch/nav.rviz" /> -->
<!-- <node name="rviz" pkg="rviz" type="rviz" /> -->
<!--finds all of the non-fixed joints and publishes a JointState message-->
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" > -->
        <!-- <param name="use_gui" value="False" /> -->
    <!-- </node> -->

    <!-- Map server -->
    <arg name="map_file" default="$(find leo_nav)/maps/workplace.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>
<!--
  <node pkg="ebot_nav" name="ebot_nav" type="action.py" >
  </node> -->

      <!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />

    <rosparam file="$(find leo_nav)/config/common_costmap.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find leo_nav)/config/common_costmap.yaml" command="load" ns="local_costmap" />

    <rosparam file="$(find leo_nav)/config/local_costmap.yaml" command="load" />
    <rosparam file="$(find leo_nav)/config/global_costmap.yaml" command="load" />
    <rosparam file="$(find leo_nav)/config/move_base_param.yaml" command="load"  ns="/"/>
    <rosparam file="$(find leo_nav)/config/dwa_local_planner.yaml" command="load" />


    <!-- <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="0.15"/>
    <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="0.15"/> -->

  </node>

  <!-- <node pkg="leo_nav" type="action2.py"  name="action" output="screen"/> -->

</launch>
